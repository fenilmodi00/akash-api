# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from akash_api.akash.market.v1beta3 import bid_pb2 as akash_dot_market_dot_v1beta3_dot_bid__pb2
from akash_api.akash.market.v1beta3 import lease_pb2 as akash_dot_market_dot_v1beta3_dot_lease__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in akash/market/v1beta3/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )

class MsgStub(object):
    """Msg defines the market Msg service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBid = channel.unary_unary(
                '/akash.market.v1beta3.Msg/CreateBid',
                request_serializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBid.SerializeToString,
                response_deserializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBidResponse.FromString,
                _registered_method=True)
        self.CloseBid = channel.unary_unary(
                '/akash.market.v1beta3.Msg/CloseBid',
                request_serializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBid.SerializeToString,
                response_deserializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBidResponse.FromString,
                _registered_method=True)
        self.WithdrawLease = channel.unary_unary(
                '/akash.market.v1beta3.Msg/WithdrawLease',
                request_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLease.SerializeToString,
                response_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLeaseResponse.FromString,
                _registered_method=True)
        self.CreateLease = channel.unary_unary(
                '/akash.market.v1beta3.Msg/CreateLease',
                request_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLease.SerializeToString,
                response_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLeaseResponse.FromString,
                _registered_method=True)
        self.CloseLease = channel.unary_unary(
                '/akash.market.v1beta3.Msg/CloseLease',
                request_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLease.SerializeToString,
                response_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLeaseResponse.FromString,
                _registered_method=True)

class MsgServicer(object):
    """Msg defines the market Msg service
    """

    def CreateBid(self, request, context):
        """CreateBid defines a method to create a bid given proper inputs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseBid(self, request, context):
        """CloseBid defines a method to close a bid given proper inputs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WithdrawLease(self, request, context):
        """WithdrawLease withdraws accrued funds from the lease payment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLease(self, request, context):
        """CreateLease creates a new lease
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseLease(self, request, context):
        """CloseLease defines a method to close an order given proper inputs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBid': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBid,
                    request_deserializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBid.FromString,
                    response_serializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBidResponse.SerializeToString,
            ),
            'CloseBid': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseBid,
                    request_deserializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBid.FromString,
                    response_serializer=akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBidResponse.SerializeToString,
            ),
            'WithdrawLease': grpc.unary_unary_rpc_method_handler(
                    servicer.WithdrawLease,
                    request_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLease.FromString,
                    response_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLeaseResponse.SerializeToString,
            ),
            'CreateLease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLease,
                    request_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLease.FromString,
                    response_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLeaseResponse.SerializeToString,
            ),
            'CloseLease': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseLease,
                    request_deserializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLease.FromString,
                    response_serializer=akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLeaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'akash.market.v1beta3.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('akash.market.v1beta3.Msg', rpc_method_handlers)

 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the market Msg service
    """

    @staticmethod
    def CreateBid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/akash.market.v1beta3.Msg/CreateBid',
            akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBid.SerializeToString,
            akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCreateBidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseBid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/akash.market.v1beta3.Msg/CloseBid',
            akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBid.SerializeToString,
            akash_dot_market_dot_v1beta3_dot_bid__pb2.MsgCloseBidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WithdrawLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/akash.market.v1beta3.Msg/WithdrawLease',
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLease.SerializeToString,
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgWithdrawLeaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/akash.market.v1beta3.Msg/CreateLease',
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLease.SerializeToString,
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCreateLeaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseLease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/akash.market.v1beta3.Msg/CloseLease',
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLease.SerializeToString,
            akash_dot_market_dot_v1beta3_dot_lease__pb2.MsgCloseLeaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
