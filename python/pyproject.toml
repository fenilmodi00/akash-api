[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "akash-api"
version = "0.2.0"
description = "Comprehensive Python client for Akash Network with REST, gRPC, and transaction support"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
authors = [
    { name = "Akash Network Team", email = "hello@akash.network" }
]
keywords = ["akash", "blockchain", "cosmos", "grpc", "protobuf", "cloud", "decentralized", "kubernetes"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Distributed Computing",
]

# Core dependencies (all features included by default)
dependencies = [
    "requests>=2.28.0",
    "protobuf>=4.21.0",
    "grpcio>=1.50.0",
    "grpcio-tools>=1.50.0",
    "aiohttp>=3.8.0",
    "cryptography>=3.4.8",
    "ecdsa>=0.18.0",
    "bech32>=1.2.0",
]

# Optional dependencies for development and performance
[project.optional-dependencies]
performance = [
    "ujson>=5.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=5.0.0",
]

# Legacy modular options (deprecated - all features now included by default)
grpc = []  # Now included by default
async = []  # Now included by default
crypto = []  # Now included by default
full = []  # Same as default install

[project.urls]
Homepage = "https://akash.network"
Documentation = "https://docs.akash.network"
Repository = "https://github.com/akash-network/akash-api"
Issues = "https://github.com/akash-network/akash-api/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"akash_api" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude generated protobuf files
  .*_pb2\.py
  | .*_pb2_grpc\.py
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options] 
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
